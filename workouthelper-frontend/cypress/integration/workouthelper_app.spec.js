describe('Workout Helper App ', function() {
  describe('Welcome page tests ', function() {
    it('front page can be opened', function() {
      cy.visit('http://localhost:3000')
      cy.contains('Workout Helper')
      cy.contains('Login')
      cy.contains('Register')
      cy.contains('TERMS OF SERVICE, Workout Helper 2021.')
    })

    it('login page can be opened', function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
    })

    it('register page can be opened', function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.url().should('eq', 'http://localhost:3000/welcome/register')
      cy.contains('Workout Helper')
      cy.contains('Login')
      cy.contains('Register')
      cy.contains('Register a New Username')
      cy.contains('Register a New Password')
      cy.contains('By clicking on Register, I confirm that I have read and I agree to the Terms of Service, which can be seen by clicking the Terms of Service button at the bottom of this page.')
      cy.contains('TERMS OF SERVICE, Workout Helper 2021.')
    })

    it('wrong root address redirects to login page', function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.visit('http://localhost:3000/wrongpage')
      cy.wait(500)
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
    })

    it('wrong address after /welcome/ redirects to login page', function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.visit('http://localhost:3000/welcome/anotherwrongpage')
      cy.wait(500)
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
    })

    it('wrong address while in register page redirects to register page', function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.visit('http://localhost:3000/welcome/regi')
      cy.wait(500)
      cy.url().should('eq', 'http://localhost:3000/welcome/register')
      cy.contains('Workout Helper')
      cy.contains('Register a New Username')
      cy.contains('Register a New Password')
      cy.contains('By clicking on Register, I confirm that I have read and I agree to the Terms of Service, which can be seen by clicking the Terms of Service button at the bottom of this page.')
    })

    it('visit in external page after in register page, then coming back redirects to register page', function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.request('https://duckduckgo.com/')
      cy.visit('http://localhost:3000')
      cy.wait(500)
      cy.url().should('eq', 'http://localhost:3000/welcome/register')
      cy.contains('Workout Helper')
      cy.contains('Register a New Username')
      cy.contains('Register a New Password')
      cy.contains('By clicking on Register, I confirm that I have read and I agree to the Terms of Service, which can be seen by clicking the Terms of Service button at the bottom of this page.')
    })

    it('page refresh after in register page redirects to register page', function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.reload()
      cy.wait(500)
      cy.url().should('eq', 'http://localhost:3000/welcome/register')
      cy.contains('Workout Helper')
      cy.contains('Register a New Username')
      cy.contains('Register a New Password')
      cy.contains('By clicking on Register, I confirm that I have read and I agree to the Terms of Service, which can be seen by clicking the Terms of Service button at the bottom of this page.')
    })

    it('while in register page, url is correct', function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.url().should('eq', 'http://localhost:3000/welcome/register')
      cy.contains('Workout Helper')
      cy.contains('Register a New Username')
      cy.contains('Register a New Password')
      cy.contains('By clicking on Register, I confirm that I have read and I agree to the Terms of Service, which can be seen by clicking the Terms of Service button at the bottom of this page.')
    })
  })

  describe('Register form tests 1', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
    })

    it('registering fails if username too short', function() {
      cy.get('#usernameFieldRegister').type('no')
      cy.get('#passwordFieldRegister').click()
      cy.contains('Username must be at least 3 characters long')
    })

    it('registering fails if username too long', function() {
      cy.get('#usernameFieldRegister').type('whaaaaaaaaaaaaaaaaaaaaaaaaaaaat')
      cy.get('#passwordFieldRegister').click()
      cy.contains('Username must be at most 30 characters long')
    })

    it('registering fails if username empty', function() {
      cy.get('#usernameFieldRegister').click()
      cy.get('#passwordFieldRegister').click()
      cy.contains('New username is required')
    })

    it('registering fails if username wrong type', function() {
      cy.get('#usernameFieldRegister').type('wrong?')
      cy.get('#passwordFieldRegister').click()
      cy.contains('Username must not contain white spaces or special characters other than _ or -')
    })

    it('registering fails if password too short', function() {
      cy.get('#passwordFieldRegister').type('notlong')
      cy.get('#usernameFieldRegister').click()
      cy.contains('Password must be at least 8 characters long')
    })

    it('registering fails if password too long', function() {
      cy.get('#passwordFieldRegister').type('toolooooooooooooooooooooooooooooooooooooooooooooong')
      cy.get('#usernameFieldRegister').click()
      cy.contains('Password must be at most 50 characters long')
    })

    it('registering fails if password empty', function() {
      cy.get('#passwordFieldRegister').click()
      cy.get('#usernameFieldRegister').click()
      cy.contains('New password is required')
    })

    it('registering fails if password wrong type', function() {
      cy.get('#passwordFieldRegister').type('notgood?')
      cy.get('#usernameFieldRegister').click()
      cy.contains('Password must have at least one lowercase letter, one uppercase letter, one number, one special character, no white spaces and no scands')
    })

    it('registering fails if confirmation empty', function() {
      cy.get('#confirmationFieldRegister').click()
      cy.get('#usernameFieldRegister').click()
      cy.contains('Password confirmation is required')
    })

    it('registering fails if confirmation does not match password', function() {
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(`${Cypress.env('password')}a`)
      cy.get('#usernameFieldRegister').click()
      cy.contains('Password confirmation must match the password')
    })

    it('registering fails if terms are not accepted', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#usernameFieldRegister').click()
      cy.contains('You must agree before submitting')
    })

    it('register button is disabled if username has error message', function() {
      cy.get('#usernameFieldRegister').click()
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is disabled if password has error message', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').click()
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is disabled if confirmation has error message', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').click()
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is disabled if username field is empty', function() {
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is disabled if password field is empty', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is disabled if confirmation field is empty', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').dblclick()
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is disabled if terms is not checked', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#registerButton').should('be.disabled')
    })

    it('register button is not disabled if form inputs are ok', function() {
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').should('not.be.disabled')
    })

    it('while in register page with errors, no errors anymore after return from visit to login page', function() {
      cy.get('#usernameFieldRegister').click()
      cy.get('#passwordFieldRegister').click()
      cy.get('#confirmationFieldRegister').click()
      cy.get('#termsCheckboxRegister').click()
      cy.get('#usernameFieldRegister').click()
      cy.get('html').should('contain', 'New username is required')
      cy.get('html').should('contain', 'New password is required')
      cy.get('html').should('contain', 'Password confirmation is required')
      cy.visit('http://localhost:3000/welcome/login')
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('html').should('not.contain', 'New username is required')
      cy.get('html').should('not.contain', 'New password is required')
      cy.get('html').should('not.contain', 'Password confirmation is required')
    })

    it('terms text is not shown before clicked', function() {
      cy.get('html').should('not.contain', 'or by way of assistance from any third party to distribute, copy, extract or commercially')
    })

    it('terms text is shown after clicked', function() {
      cy.get('#termsText').click()
      cy.get('html').should('contain', 'or by way of assistance from any third party to distribute, copy, extract or commercially')
    })

    it('resizing browser shows hamburger menu', function() {
      cy.viewport(480, 320)
      cy.get('#responsive-navbar-nav').should('not.be.visible')
    })

    it('not resizing browser does not show hamburger menu', function() {
      cy.get('#responsive-navbar-nav').should('be.visible')
    })

    describe('Register form tests 2', function() {
      afterEach(function() {
        cy.visit('http://localhost:3000/welcome/login')
        cy.get('html').should('not.contain', 'Register a New Username')
        cy.get('#usernameFieldLogin').type(Cypress.env('username'))
        cy.get('#passwordFieldLogin').type(Cypress.env('password'))
        cy.get('#loginButton').click()
        cy.wait(500)
        cy.get('#loginButtonSpinner').should('be.visible')
        cy.get('#usernameFieldLogin').should('be.disabled')
        cy.get('#passwordFieldLogin').should('be.disabled')
        cy.get('html').should('not.contain', 'loginHeader')
        cy.get('html').should('not.contain', 'registerHeader')
        cy.wait(5000)
        cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
        cy.contains('Select workout: ')
        cy.visit('http://localhost:3000/dashboard/profile')
        cy.get('#deleteProfileButton').click()
        cy.wait(500)
        cy.contains('Login')
        cy.contains('Register')
        cy.url().should('eq', 'http://localhost:3000/welcome/login')
        cy.contains('Your profile has been removed.')
        cy.get('html').should('not.contain', 'notificationGrowLeft')
        cy.get('html').should('not.contain', 'notificationGrowRight')
      })

      it('registering with username that is in use is not possible and shows error message', function() {
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.wait(7000)
        cy.visit('http://localhost:3000/welcome/register')
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.contains('Username is already in use or credentials are not valid')
        cy.contains('Register a New Username')
        cy.contains('Register a New Password')
        cy.contains('By clicking on Register, I confirm that I have read and I agree to the Terms of Service, which can be seen by clicking the Terms of Service button at the bottom of this page.')
      })

      it('registering with username that is in use redirects to the register page after 7000 ms', function() {
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.wait(7000)
        cy.visit('http://localhost:3000/welcome/register')
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.wait(7000)
        cy.url().should('eq', 'http://localhost:3000/welcome/register')
      })

      it('registering with username that is in use and after error message, terms button is not checked, register button is disabled and register button cloud icon is visible', function() {
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.wait(7000)
        cy.visit('http://localhost:3000/welcome/register')
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.wait(7000)
        cy.get('#termsCheckboxRegister').should('not.be.checked')
        cy.get('#registerButton').should('be.disabled')
        cy.get('#registerButtonCloudIcon').should('be.visible')
      })

      it('registering with fresh username shows spinner in register button, form input fields are disabled, login and register tabs are not visible and redirects to login page after 7000 ms', function() {
        cy.get('#usernameFieldRegister').type(Cypress.env('username'))
        cy.get('#passwordFieldRegister').type(Cypress.env('password'))
        cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
        cy.get('#termsCheckboxRegister').click()
        cy.get('#registerButton').click()
        cy.wait(500)
        cy.get('#registerButtonSpinner').should('be.visible')
        cy.get('#usernameFieldRegister').should('be.disabled')
        cy.get('#passwordFieldRegister').should('be.disabled')
        cy.get('#confirmationFieldRegister').should('be.disabled')
        cy.get('html').should('not.contain', 'loginHeader')
        cy.get('html').should('not.contain', 'registerHeader')
        cy.wait(7000)
        cy.url().should('eq', 'http://localhost:3000/welcome/login')
      })
    })
  })

  describe('Login form tests ', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    afterEach(function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.get('html').should('not.contain', 'Register a New Username')
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })

    it('login fails if username empty', function() {
      cy.get('#usernameFieldLogin').click()
      cy.get('#passwordFieldLogin').click()
      cy.contains('Username is required')
    })

    it('login fails if username wrong', function() {
      cy.get('#usernameFieldLogin').type(`${Cypress.env('username')}c`)
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.contains('Username or password is not valid')
    })

    it('login fails if password empty', function() {
      cy.get('#passwordFieldLogin').click()
      cy.get('#usernameFieldLogin').click()
      cy.contains('Password is required')
    })

    it('login fails if password wrong', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(`${Cypress.env('password')}#`)
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.contains('Username or password is not valid')
    })

    it('login button is disabled if username has error message', function() {
      cy.get('#usernameFieldLogin').click()
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').should('be.disabled')
    })

    it('login button is disabled if password has error message', function() {
      cy.get('#passwordFieldLogin').click()
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#loginButton').should('be.disabled')
    })

    it('login button is disabled if username field is empty', function() {
      cy.get('#usernameFieldLogin').click()
      cy.get('#passwordFieldLogin').click()
      cy.get('#loginButton').should('be.disabled')
    })

    it('login button is disabled if password field is empty', function() {
      cy.get('#passwordFieldLogin').click()
      cy.get('#usernameFieldLogin').click()
      cy.get('#loginButton').should('be.disabled')
    })

    it('login button is not disabled if form inputs are ok', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').should('not.be.disabled')
    })

    it('while in login page with errors, no errors anymore after return from visit to register page', function() {
      cy.get('#passwordFieldLogin').click()
      cy.get('#usernameFieldLogin').click()
      cy.get('#passwordFieldLogin').click()
      cy.get('html').should('contain', 'Username is required')
      cy.get('html').should('contain', 'Password is required')
      cy.visit('http://localhost:3000/welcome/register')
      cy.visit('http://localhost:3000/welcome/login')
      cy.get('html').should('not.contain', 'Username is required')
      cy.get('html').should('not.contain', 'Password is required')
    })

    it('login with incorrect credentials redirects to the login page after 4000 ms', function() {
      cy.get('#usernameFieldLogin').type(`${Cypress.env('username')}d`)
      cy.get('#passwordFieldLogin').type(`${Cypress.env('password')}/`)
      cy.get('#loginButton').click()
      cy.wait(4000)
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
    })

    it('login with incorrect credentials and after error message, login button is disabled and login button signin icon is visible', function() {
      cy.get('#usernameFieldLogin').type(`${Cypress.env('username')}e`)
      cy.get('#passwordFieldLogin').type(`${Cypress.env('password')}=`)
      cy.get('#loginButton').click()
      cy.wait(4000)
      cy.get('#loginButton').should('be.disabled')
      cy.get('#loginButtonSignInIcon').should('be.visible')
    })

    it('login with correct username and password shows spinner in login button, form input fields are disabled, login and register tabs are not visible and redirects to dashboard after 5000 ms', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#logoutButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
    })
  })

  describe('Logout form test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    afterEach(function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.get('html').should('not.contain', 'Register a New Username')
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })

    it('logout redirects to login page and displays logout message without grow spinners', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#logoutButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('You logged out.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })

  describe('Delete profile form test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    it('delete profile redirects to login page and displays delete profile message without grow spinners', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })

  describe('Planner forms test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    afterEach(function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.get('html').should('not.contain', 'Register a New Username')
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })

    it('plan can be added and deleted', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/planner')
      cy.get('#planNamePlanner').click({ force: true })
      cy.get('#planNamePlanner').type('Road to Guitar Excellence', { force: true })
      cy.get('#planMemoPlanner').click({ force: true })
      cy.get('#planMemoPlanner').type('Chord Changes A-B', { force: true })
      cy.get('#plannerPlanSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('A new plan was added:')
      cy.get('html').should('contain', 'Road to Guitar Excellence')
      cy.wait(4000)
      cy.contains('Select plan: ')
      cy.get('#plannerSelectPlanDropdown').click({ force: true })
      cy.get('.dropdown-item').each(($p) => {
        if ($p.text() === 'Road to Guitar Excellence') {
          cy.wrap($p).click({ force: true })
        }
      })
      cy.wait(1000)
      cy.get('#plannerPlanDeleteButton').click({ force: true })
      cy.wait(500)
      cy.on('window:confirm', () => true)
      cy.wait(1000)
      cy.contains('Plan was deleted.')
      cy.wait(500)
      cy.get('html').should('not.contain', 'Road to Guitar Excellence')
      cy.get('html').should('not.contain', 'Chord Changes A-B')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#logoutButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('You logged out.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })

  describe('Change password form test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    it('password can be changed', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#formProfileOldPassword').type(Cypress.env('password'), { force: true })
      cy.get('#formProfileNewPassword').type(`${Cypress.env('password')}0`, { force: true })
      cy.get('#formProfilePasswordConfirmation').type(`${Cypress.env('password')}0`, { force: true })
      cy.get('#profilePasswordSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('Password was changed.')
      cy.wait(4000)
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })

  describe('Change tooltips visibility form test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    it('tooltips visibility can be changed', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#react-select-2-placeholder').click({ force: true })
      cy.get('#react-select-2-listbox').contains('Off').click({ force: true })
      cy.get('#profileTooltipsSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('Tooltips visibility was changed.')
      cy.wait(4000)
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })

  describe('Workout forms test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    afterEach(function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.get('html').should('not.contain', 'Register a New Username')
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })

    it('workout can be added, updated and deleted', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.get('#newWorkoutCategoryTitle').click({ force: true })
      cy.get('#newWorkoutCategoryTitle').type('Exercise - Bench press 132 lb 1 min', { force: true })
      cy.get('#newWorkoutTarget').click({ force: true })
      cy.get('#newWorkoutTarget').type('10', { force: true })
      cy.get('#newWorkoutSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('A new workout was added:')
      cy.get('html').should('contain', 'Exercise - Bench press 132 lb 1 min')
      cy.wait(4000)
      cy.contains('Select workout: ')
      cy.get('#workoutSelectWorkoutDropdown').click({ force: true })
      cy.get('.dropdown-item').each(($p) => {
        if ($p.text() === 'Exercise - Bench press 132 lb 1 min') {
          cy.wrap($p).click({ force: true })
        }
      })
      cy.wait(1000)
      cy.get('#selectedWorkoutTarget').click({ force: true })
      cy.get('#selectedWorkoutTarget').type('11', { force: true })
      cy.get('#selectedWorkoutResult').click({ force: true })
      cy.get('#selectedWorkoutResult').type('2', { force: true })
      cy.get('#selectedWorkoutNotes').click({ force: true })
      cy.get('#selectedWorkoutNotes').type('Too heavy.', { force: true })
      cy.get('#selectedWorkoutSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('The selected workout was updated')
      cy.get('html').should('contain', '2')
      cy.get('html').should('contain', 'Too heavy.')
      cy.wait(4000)
      cy.get('#selectedWorkoutDeleteButton').click({ force: true })
      cy.wait(500)
      cy.on('window:confirm', () => true)
      cy.wait(1000)
      cy.contains('Workout was deleted.')
      cy.wait(500)
      cy.get('html').should('not.contain', 'Exercise - Bench press 132 lb 1 min')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#logoutButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('You logged out.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })

  describe('Statistics test', function() {
    beforeEach(function() {
      cy.visit('http://localhost:3000/welcome/register')
      cy.get('#usernameFieldRegister').type(Cypress.env('username'))
      cy.get('#passwordFieldRegister').type(Cypress.env('password'))
      cy.get('#confirmationFieldRegister').type(Cypress.env('password'))
      cy.get('#termsCheckboxRegister').click()
      cy.get('#registerButton').click()
      cy.wait(7000)
    })

    afterEach(function() {
      cy.visit('http://localhost:3000/welcome/login')
      cy.get('html').should('not.contain', 'Register a New Username')
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#deleteProfileButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('Your profile has been removed.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })

    it('statistics can be viewed', function() {
      cy.get('#usernameFieldLogin').type(Cypress.env('username'))
      cy.get('#passwordFieldLogin').type(Cypress.env('password'))
      cy.get('#loginButton').click()
      cy.wait(500)
      cy.get('#loginButtonSpinner').should('be.visible')
      cy.get('#usernameFieldLogin').should('be.disabled')
      cy.get('#passwordFieldLogin').should('be.disabled')
      cy.get('html').should('not.contain', 'loginHeader')
      cy.get('html').should('not.contain', 'registerHeader')
      cy.wait(5000)
      cy.url().should('eq', 'http://localhost:3000/dashboard/workout')
      cy.contains('Select workout: ')
      cy.get('#newWorkoutCategoryTitle').click({ force: true })
      cy.get('#newWorkoutCategoryTitle').type('Exercise - Bench press 132 lb 1 min', { force: true })
      cy.get('#newWorkoutTarget').click({ force: true })
      cy.get('#newWorkoutTarget').type('10', { force: true })
      cy.get('#newWorkoutSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('A new workout was added:')
      cy.get('html').should('contain', 'Exercise - Bench press 132 lb 1 min')
      cy.wait(4000)
      cy.contains('Select workout: ')
      cy.get('#workoutSelectWorkoutDropdown').click({ force: true })
      cy.get('.dropdown-item').each(($p) => {
        if ($p.text() === 'Exercise - Bench press 132 lb 1 min') {
          cy.wrap($p).click({ force: true })
        }
      })
      cy.wait(1000)
      cy.get('#selectedWorkoutTarget').click({ force: true })
      cy.get('#selectedWorkoutTarget').type('11', { force: true })
      cy.get('#selectedWorkoutResult').click({ force: true })
      cy.get('#selectedWorkoutResult').type('2', { force: true })
      cy.get('#selectedWorkoutNotes').click({ force: true })
      cy.get('#selectedWorkoutNotes').type('Too heavy.', { force: true })
      cy.get('#selectedWorkoutSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('The selected workout was updated')
      cy.get('html').should('contain', '2')
      cy.get('html').should('contain', 'Too heavy.')
      cy.wait(4000)
      cy.contains('Select workout: ')
      cy.get('#workoutSelectWorkoutDropdown').click({ force: true })
      cy.get('.dropdown-item').each(($p) => {
        if ($p.text() === 'Exercise - Bench press 132 lb 1 min') {
          cy.wrap($p).click({ force: true })
        }
      })
      cy.wait(1000)
      cy.get('#selectedWorkoutResult').click({ force: true })
      cy.get('#selectedWorkoutResult').type('3', { force: true })
      cy.get('#selectedWorkoutSaveButton').click({ force: true })
      cy.wait(1000)
      cy.contains('The selected workout was updated')
      cy.get('html').should('contain', '3')
      cy.wait(4000)
      cy.visit('http://localhost:3000/dashboard/statistics')
      cy.get('#statisticsSelectStatisticsDropdown').click({ force: true })
      cy.get('.dropdown-item').each(($p) => {
        if ($p.text() === 'Exercise - Bench press 132 lb 1 min') {
          cy.wrap($p).click({ force: true })
        }
      })
      cy.wait(1000)
      cy.get('html').should('contain', 'Exercise - Bench press 132 lb 1 min')
      cy.get('html').should('contain', '11')
      cy.get('html').should('contain', '2')
      cy.get('html').should('contain', '3')
      cy.get('html').should('contain', '2.5')
      cy.get('html').should('contain', 'Too heavy.')
      cy.visit('http://localhost:3000/dashboard/profile')
      cy.get('#logoutButton').click()
      cy.wait(500)
      cy.contains('Login')
      cy.contains('Register')
      cy.url().should('eq', 'http://localhost:3000/welcome/login')
      cy.contains('You logged out.')
      cy.get('html').should('not.contain', 'notificationGrowLeft')
      cy.get('html').should('not.contain', 'notificationGrowRight')
    })
  })
})